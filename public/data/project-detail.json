{
  "AFO": {
    "title": "AFO",
    "detail": "기존 백오피스 EJS → React 로 재구축 + UI/UX 개선 목적의 프로젝트",
    "features": [
      {
        "name": "유효성 검사 - React-Hook-Form과 Joi로 각각 실시, 필수값 누락 방지 목적"
      },
      {
        "name": "반응형 - FHD 해상도, 아이폰 14 Pro Max 기준으로 기기별 최적화"
      },
      {
        "name": "UI/UX 통합 - 미 일치 문제를 CSV 다운로드 등 4개 기능 + UI를 표 형태로 통합하여 개선"
      }
    ],
    "troubleshootings": [
      {
        "AccordionTrigger": "UI/UX 불 일치를 AFO 프로젝트에서 개선 건",
        "issue": "레거시의 UI/UX 불 일치 - 9개 Log Page에 UX 불일치 와 표/카드 등 불 일치로 일관성 부족",
        "solution": "PM, 관련 부서와 협의하여 배포 후 불필요한 4개의 Log Page 제거와 UX 배치 기능 협의 → AFO 프로젝트에서 5개의 Log Page로 축소",
        "solutiontwo": "PM과 협의 시 AFO 프로젝트에선 모든 Log Page에 표 형태로 통일해도 무방함을 협의 후 UI 통일",
        "solutionthree": "",
        "result": "불 일치한 UX를 → CSV 다운로드, 페이지네이션, 필터, 검색 4개로 UX 통일하여 개선",
        "resulttwo": "불 일치한 UI를 → 협의 후 모두 표 형태로 통합하며 일관성 확보",
        "resultthree": ""
      },
      {
        "AccordionTrigger": "유효성 검사 누락 개선 건",
        "issue": "레거시의 유효성 검사 누락 - 계약 담당자의 연락처 등 필수 값 누락 확인 방법 부재",
        "solution": "React-Hook-Form, Joi로 프론트/백엔드 각각 유효성 검사 도입, 필수 값 누락이 없을 경우만 DB 등록",
        "solutiontwo": "React-Hook-Form을 사용하여 required, minLength로 필수 값 확인, 누락 시 빨간색 텍스트로 사용자 인지",
        "solutionthree": "Express + Joi로 API 작성 시 string.min.required 등 필수 값 설정, 누락 시 400 에러 응답 ",
        "result": "프론트/백엔드 유효성 검사 부재한 기존 사례에서 → 생산량 데이터 등 API에서 필수 값 누락 후 요청되는 사례 개선",
        "resulttwo": "",
        "resultthree": ""
      },
      {
        "AccordionTrigger": "인라인 스타일 + Bootstrap + CSS 혼용 개선 건",
        "issue": "레거시의 스타일 혼용 - 인라인 스타일 + Bootstrap + 3만 줄의 CSS 모두 혼용",
        "solution": "AFO 프로젝트부터 스타일을 TailwindCSS + DaisyUI 로 스타일 일원화",
        "solutiontwo": "",
        "solutionthree": "",
        "result": "여러 스타일 혼용으로 인한 유지 보수 난이도 상승하던 기존 사례 개선",
        "resulttwo": "",
        "resultthree": ""
      },
      {
        "AccordionTrigger": "디자인 가이드에 사용 색상 누락 협의 후 개선 건",
        "issue": "디자인 가이드 (AI 파일)에 사용 색상 정보 누락되어 정확한 색상 확인 위한 불필요 소통 추가 발생",
        "solution": "사용 색상에 대해 가이드에 Hex 코드 추가로 서로 불필요 소통을 축소하고 업무 집중을 제안",
        "solutiontwo": "프로젝트를 같이 진행하는 디자이너도 동의하여 사용 색상에 대한 HEX 코드 추가를 합의",
        "solutionthree": "",
        "result": "가이드 파일에 사용 색상에 대한 HEX 코드가 추가되어 불 필요 소통이 축소",
        "resulttwo": "",
        "resultthree": ""
      }
    ],
    "projectskill": [
      {
        "name": "React",
        "image": "/skill/react.png"
      },
      {
        "name": "Typescript",
        "image": "/skill/ts.png"
      },
      {
        "name": "TailwindCSS",
        "image": "/skill/tailwindcss.png"
      },
      {
        "name": "Express",
        "image": "/skill/express.png"
      },
      {
        "name": "MySQL",
        "image": "/skill/mysql.png"
      },
      {
        "name": "Tanstack/React-Query",
        "image": "/skill/react-query.png"
      },
      {
        "name": "React-Hook-Form",
        "image": "/skill/react-hook-form.png"
      },
      {
        "name": "GCP",
        "image": "/skill/gcp.png"
      }
    ],
    "projectpeople": "총 7명 - 디자이너 1명, PM 1명, HW 3명, SW 2명 중 웹 개발과 GCP 배포 전담",
    "projectpart": [
      {
        "name": "유일한 풀스택 개발 담당, 기획부터 참가하여 개발 진행"
      },
      {
        "name": "레거시 이슈 (UI/UX 불일치, 유효성 검사 없음 등) 해당 프로젝트에서 개선"
      },
      {
        "name": "디자인 가이드 (AI 파일)에 사용 색상 정보가 누락, 협의 후 HEX 코드 추가"
      },
      {
        "name": "GCP Compute Engine에 Nginx와 PM2로 프론트/백엔드 무중단 배포 담당"
      }
    ],
    "skill": [
      {
        "name": "TailwindCSS + DaisyUI",
        "description": "레거시의 인라인 스타일 + Bootstrap + 약 3만 줄 CSS 혼용 개선 목적"
      },
      {
        "name": "React-Hook-Form/Joi",
        "description": "프론트/백엔드 각각 유효성 검사를 실시하여 필수 값 누락 확인 목적"
      },
      {
        "name": "GCP",
        "description": "회사가 기존에 사용한 GCP Compute Engine로 배포 목적으로 사용"
      }
    ],
    "thumbnailImage": "/project/afo-logo.png",
    "date": "2023.03 - 2023.09 (약 6개월)",
    "github": "",
    "deploy": ""
  },
  "Compact-Machine": {
    "title": "Compact-Machine",
    "detail": "내부 백오피스로 출발하나 점차 외국 고객사까지 사용하는 서비스를 목표로 한 백오피스입니다.",
    "features": [
      {
        "name": "한국어, 영어 변경 - I18next로 언어 전환이 가능하도록 구현"
      },
      {
        "name": "반응형 - FHD 해상도, 갤럭시 S20 Ultra 기준으로 기기별 최적화"
      }
    ],
    "troubleshootings": [
      {
        "AccordionTrigger": "API 문서화 부재로 소통 지연 발생",
        "issue": "API 문서화 부재하여 소통에 지연 발생한 사례가 존재",
        "solution": "개발팀 간 원활한 소통을 위해 문서화가 필요하다 판단하여 먼저 제안.",
        "solutiontwo": "팀에선 문서화에 대해 긍정적이나 Swagger/Notion 중 의견 차이가 존재.",
        "solutionthree": "선정된 서비스로 백엔드를 병행하는 겸 문서화/최신화를 전담하겠다 제안.",
        "result": "Notion 사용으로 결정된 후 필수 값, 요청 값 등 작성 → PDF로 팀과 공유/최신화 전담",
        "resulttwo": "이후 진행한 NEW APEHEX 프로젝트에서도 동일한 형태로 문서화하며 프로세스 정착",
        "resultthree": ""
      },
      {
        "AccordionTrigger": "레거시 성능 이슈 → Compact-Machine에서 개선 건",
        "issue": "Performance 탭 기준 LCP 약 30초/리소스 요청 1,400개 발생/Lighthouse NO_FCP 등 성능 이슈로 실 사용자와 내부 부서에서 언급 지속",
        "solution": "코드 스플리팅 도입, 지도/표 등 기능별 컴포넌트 분리, Zustand로 상태 관리 등 추가",
        "solutiontwo": "GET API에 없던 max-age=300로 캐싱을 적용, useQuery로 retry:5, staleTime 5분 적용하여 안정성 확보",
        "solutionthree": "기존에 없던 try/catch로 예외 처리 추가, PM2가 계속 재시작 하는 기존 사례 개선",
        "result": "LCP 1초 이하, 리소스 요청 50개 미만, Lighthouse를 Desktop 3회 평균 76점으로 개선",
        "resulttwo": "MVP 배포 후, 주 사용부서 팀장을 통해 팀 내부에서 7개월간 속도 관련 불만 0건 유지",
        "resultthree": "이후 주 사용부서에 요청에 따라 추가 기능 구현과, 모바일 반응형 개선 진행"
      },
      {
        "AccordionTrigger": "레거시 단일 파일 약 2,000줄 파일 → Compact-Machine에서 100줄 이하로 개선 건",
        "issue": "레거시의 관리자 페이지 파일은 코드 분리 없이 약 2,000줄로 코드 파악과 유지 보수 난이도 높은 상황 지속",
        "solution": "Header/Footer 등 공통 컴포넌트를 우선 분리 후 프로젝트 전역에 적용",
        "solutiontwo": "이후 각 기능 별(지도/표/그래프) 등 컴포넌트를 분리 후 관리자 페이지에 Import",
        "solutionthree": "",
        "result": "관리자 페이지 단일 파일 기준 2,000줄 → 80줄 이하로 개선하며 유지 보수 효율성 확보",
        "resulttwo": "약 16개의 기능별 컴포넌트를 분리 후 /admin에서 보는 파일에 Import 하여 유지 보수 효율성 확보",
        "resultthree": ""
      }
    ],
    "projectskill": [
      {
        "name": "React",
        "image": "/skill/react.png"
      },
      {
        "name": "Typescript",
        "image": "/skill/ts.png"
      },
      {
        "name": "TailwindCSS",
        "image": "/skill/tailwindcss.png"
      },
      {
        "name": "Zustand",
        "image": "/skill/zustand.png"
      },
      {
        "name": "Express",
        "image": "/skill/express.png"
      },
      {
        "name": "MySQL",
        "image": "/skill/mysql.png"
      },
      {
        "name": "Tanstack/React-Query",
        "image": "/skill/react-query.png"
      },
      {
        "name": "React-Hook-Form",
        "image": "/skill/react-hook-form.png"
      },
      {
        "name": "GCP",
        "image": "/skill/gcp.png"
      }
    ],
    "projectpeople": "총 5명 - PM 1명, HW 2명, SW 2명 중 웹 개발 과 GCP 배포 전담",
    "projectpart": [
      {
        "name": "유일한 풀스택 개발 담당, 기획부터 참가하여 MVP 오픈 후 추가 기능 구현"
      },
      {
        "name": "이전 프로젝트에 미 사용한 Zustand, i18next 등 사용, 다국가 서비스 대비"
      },
      {
        "name": "팀과 협의 후 API 문서화를 Notion로 생성/최신화 문서화 정착 주도"
      },
      {
        "name": "GCP Compute Engine에 Nginx와 PM2로 프론트/백엔드 무중단 배포 담당"
      }
    ],
    "skill": [
      {
        "name": "I18next",
        "description": "외국 서비스를 고려하여 한국어 ↔ 영어 전환 기능을 제공하고자 사용"
      },
      {
        "name": "Zustand",
        "description": "로그인 상태 관리 목적, 권한 값을 기준 컴포넌트 조건부 렌더링 위해 사용"
      }
    ],
    "thumbnailImage": "/project/compact-login.png",
    "date": "2024.01 - 2025.03 (약 1년 2개월)",
    "github": "",
    "deploy": ""
  },
  "Steamrader": {
    "title": "Steamrader",
    "detail": "Steam의 API를 사용, GTA 5 등 인기 게임의 할인 리스트를 보여주는 프로젝트.",
    "features": [
      {
        "name": "반응형 레이아웃 - 모바일 (아이폰 14 Pro Max), PC 화면 크기 별 최적화"
      },
      {
        "name": "필터 - RPG, 캐주얼 등 카테고리별 일치하는 데이터만 렌더링"
      },
      {
        "name": "API - Steam의 API를 사용, 조건에 일치한 데이터만 Supabase에 저장"
      }
    ],

    "troubleshootings": [
      {
        "AccordionTrigger": "API 요청 후 access denied 발생",
        "issue": "API 요청 후 약 10분간 스팀 API에서 access denied 응답",
        "solution": "초기 모든 할인 게임 제공 시도 → GTA 등 인기 게임 위주로 볼 것이라 예상 → 15% 이상 할인 + 리뷰 5,000건 이상의 게임 약 150개만 제공으로 수정",
        "solutiontwo": "",
        "solutionthree": "",
        "result": "Steam의 할인 시 API 호출하여 DB 업데이트 → access denied 미 발생 확인",
        "resulttwo": "",
        "resultthree": ""
      },
      {
        "AccordionTrigger": "배포 후 API 호출 시 응답 지연 발생",
        "issue": "CSR로 API 호출 시 응답 지연(1초 이상) 발생",
        "solution": "CSR → SSR 변경과 Vercel 리전을 워싱턴 DC → 서울로 변경, 속도 차이가 미약함 확인",
        "solutiontwo": "",
        "solutionthree": "",
        "result": "무조건 Vercel 배포보단, 필요시 Cold Start 영향받지 않기 위해 AWS/GCP 등 타 플랫폼에서 배포 필요성 인지",
        "resulttwo": "",
        "resultthree": ""
      },
      {
        "AccordionTrigger": "Google Search Console 등록 후 총 노출 수 저조",
        "issue": "배포 후 총 노출 수 저조, 개선이 필요하다 판단",
        "solution": "Metadata.title이 Steamrader로 유입 키워드 부족 → 스팀 할인 정보 등 유입 키워드로 변경",
        "solutiontwo": "",
        "solutionthree": "",
        "result": "기존 총 노출 수 5건 이하 → 약 40건으로 증가, SEO의 중요성을 인지하고 개발하게 됨",
        "resulttwo": "",
        "resultthree": ""
      }
    ],
    "projectskill": [
      {
        "name": "Next.js (App Router)",
        "image": "/skill/next.png"
      },
      {
        "name": "Typescript",
        "image": "/skill/ts.png"
      },
      {
        "name": "TailwindCSS",
        "image": "/skill/tailwindcss.png"
      },
      {
        "name": "Supabase",
        "image": "/skill/supabases.png"
      },
      {
        "name": "Prisma",
        "image": "/skill/prisma.png"
      },
      {
        "name": "Vercel",
        "image": "/skill/vercel.svg"
      }
    ],
    "projectpeople": "1인 프로젝트.",
    "projectpart": [
      {
        "name": "프로젝트 관련 모든 부분 전수 진행"
      },
      {
        "name": "Google Search Console에 등록 후 구글 검색 결과에 노출을 확인"
      }
    ],
    "skill": [
      {
        "name": "Next.js",
        "description": "기존 Express로만 API 작성 → Next.js로 풀스택 개발과 App Router 학습 목적"
      },
      {
        "name": "Supabase",
        "description": "미 사용해본 Supabase로 MySQL 대신 데이터를 저장하는 목적으로만 사용"
      },
      {
        "name": "Prisma",
        "description": "SQL Query로 진행한 AFO, Compact-Machine와 달리 신규 ORM 학습 목적."
      }
    ],
    "thumbnailImage": "/project/steamrader-main.png",
    "date": "2025.04 - 2025.05 (약 1개월)",
    "github": "https://github.com/sangil94s/steamrader",
    "deploy": "https://steam-rader.vercel.app/"
  }
}
